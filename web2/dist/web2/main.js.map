{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/rx-stomp.config.ts","webpack:///./src/app/tick-component/tick-component.component.css","webpack:///./src/app/tick-component/tick-component.component.html","webpack:///./src/app/tick-component/tick-component.component.ts","webpack:///./src/app/tollbar/tollbar.component.css","webpack:///./src/app/tollbar/tollbar.component.html","webpack:///./src/app/tollbar/tollbar.component.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n\\n<!--<app-chart-indicator></app-chart-indicator>-->\\n\\n <app-tick-component></app-tick-component>\\n\\n  <div class=\\\"container\\\" style=\\\"width: 400px; margin-top: 20px;\\\">\\n    <form class=\\\"form-inline\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"connect\\\">Make Connection:</label>\\n        <button id=\\\"connect\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\" [disabled]=\\\"!disabled\\\" (click)=\\\"connect()\\\">Connect</button>\\n        <button id=\\\"disconnect\\\" class=\\\"btn btn-default\\\" type=\\\"submit\\\" [disabled]=\\\"disabled\\\" (click)=\\\"disconnect()\\\">Disconnect</button>\\n      </div>\\n    </form>\\n\\n\\n    <form class=\\\"form-inline\\\" *ngIf=\\\"bar != null\\\" style=\\\"margin-top: 20px;\\\">\\n      <mat-card class=\\\"example-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>{{bar.currencyPair}}</mat-card-title>\\n          <mat-card-subtitle>{{bar.last}}</mat-card-subtitle>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <p>ask: {{bar.ask}} </p>\\n          <p>bid: {{bar.bid}}</p>\\n\\n          <p>askSize: {{bar.askSize}}</p>\\n          <p>bidSize: {{bar.bidSize}}</p>\\n\\n          <p>high: {{bar.high}}</p>\\n          <p>low: {{bar.low}}</p>\\n          <p>open: {{bar.open}}</p>\\n\\n          <p>quoteVolume: {{bar.quoteVolume}}</p>\\n          <p>timestamp: {{bar.timestamp}}</p>\\n          <p>volume: {{bar.volume}}  </p>\\n        </mat-card-content>\\n        <mat-card-actions>\\n          <button mat-button>LIKE</button>\\n          <button mat-button>SHARE</button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </form>\\n    <table id=\\\"conversation\\\" class=\\\"table table-striped\\\" style=\\\"margin-top: 40px;\\\">\\n      <thead>\\n        <tr>\\n          <th>Greetings</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngFor=\\\"let greeting of greetings\\\">\\n        <tr>\\n          <td>S: {{greeting.source}} M:{{greeting.msg}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n  </div>\\n\\n <span *ngIf=\\\"subscribed\\\">Subscribed</span>\\n <span *ngIf=\\\"!subscribed\\\">Unsubscribed</span>\\n <h2>Messages</h2>\\n <p>{{count}} total</p>\\n\\n <h3 *ngIf=\\\"count\\\">Latest:</h3>\\n <pre>{{messages | async}}</pre>\\n\\n <h3 *ngIf=\\\"mq.length\\\">History:</h3>\\n <ol>\\n   <li *ngFor=\\\"let m of mq\\\">{{m}}</li>\\n </ol>\\n\"","import {Component, OnInit} from '@angular/core';\n\nimport {Ticket} from \"./ticket\";\n\nimport {Message} from '@stomp/stompjs';\nimport {Subscription} from \"rxjs\";\nimport {RxStompService} from \"@stomp/ng2-stompjs\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: []\n})\n\nexport class AppComponent {\n  private topicSubscription: Subscription;\n  // // Subscription status\n  public subscribed: boolean;\n\n  // Array of historic message (bodies)\n  public mq: Array<string> = [];\n\n  // A count of messages received\n  public count = 0;\n\n  private _counter = 1;\n  greetings: string[] = [];\n  disabled = true;\n\n  private greeting: void;\n  private bar :Ticket;\n\n  constructor(private rxStompService: RxStompService) {\n\n  }\n\n  showGreeting(message) {\n    if (message.source == \"tbar\"){\n      this.bar = message.msg;\n      //console.log(message);\n    } else {\n      this.greetings.push(message);}\n  }\n\n  onSendMessage() {\n    const message = `Message generated at ${new Date}`;\n    this.rxStompService.publish({destination: '/app/send/message', body: JSON.stringify({source: \"start\", msg: true}) });\n  }\n  connect() {\n    this.rxStompService.watch('/topic/hi').subscribe(this.on_next);\n    this.onSendMessage();\n    this.subscribed = true;\n  }\n\n\n\n  disconnect(){\n    this.topicSubscription.unsubscribe();\n    this.subscribed = false;\n  }\n\n  /** Consume a message from the _stompService */\n  public on_next = (message: Message) => {\n     this.showGreeting(JSON.parse(message.body));\n    this.mq.push(message.body)\n     if(this.mq.length > 50){\n      this.mq.splice(0,1);\n    }\n    // Count it\n    this.count++;\n    //\n    // // Log it to the console\n    console.log(message);\n  }\n\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\n\nimport {MatToolbarModule, MatCardModule, MatNativeDateModule,MatTableModule} from '@angular/material';\nimport {CdkTableModule} from '@angular/cdk/table';\n\n\nimport { TollbarComponent } from './tollbar/tollbar.component';\nimport {HttpClientModule} from \"@angular/common/http\";\n\n//config socket ang7\nimport {InjectableRxStompConfig, RxStompService, rxStompServiceFactory} from \"@stomp/ng2-stompjs\";\nimport { myRxStompConfig } from './rx-stomp.config';\nimport { TickComponentComponent } from './tick-component/tick-component.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TollbarComponent,\n    TickComponentComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    MatToolbarModule, MatCardModule,MatNativeDateModule, MatTableModule\n\n  ],\n  bootstrap: [AppComponent],\n  providers: [\n\n    {\n      provide: InjectableRxStompConfig,\n      useValue: myRxStompConfig\n    },\n    {\n      provide: RxStompService,\n      useFactory: rxStompServiceFactory,\n      deps: [InjectableRxStompConfig]\n    }\n    ]\n})\nexport class AppModule { }\n","import {InjectableRxStompConfig} from \"@stomp/ng2-stompjs\";\r\nimport {environment} from \"../environments/environment.prod\";\r\n\r\n\r\nexport const myRxStompConfig:\r\n  { brokerURL: string; debug: (msg: string) => void; reconnect_delay: number;\r\n  heartbeat_out: number; heartbeat_in: number } =\r\n  {\r\n  brokerURL: environment.ws_serverURL,\r\n//   headers: {\r\n//     login: 'guest',\r\n//     passcode: 'guest'\r\n//   },\r\n//\r\n   heartbeat_in: 0, // Typical value 0 - disabled\r\n   heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\r\n   reconnect_delay: 200,\r\n//   // Will log diagnostics on console\r\n  debug: (msg: string): void => {\r\n    console.log(new Date(), msg);\r\n  }\r\n};\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpY2stY29tcG9uZW50L3RpY2stY29tcG9uZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <!--- Note that these columns can be defined in any order.\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"position\\\">\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container matColumnDef=\\\"weight\\\">\\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"symbol\\\">\\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n@Component({\n  selector: 'app-tick-component',\n  templateUrl: './tick-component.component.html',\n  styleUrls: ['./tick-component.component.css']\n})\n\nexport class TickComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvbGxiYXIvdG9sbGJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\"> Trading\\n  </mat-toolbar>\\n\"","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-tollbar',\n  templateUrl: './tollbar.component.html',\n  styleUrls: ['./tollbar.component.css'],\n\n\n})\nexport class TollbarComponent implements OnInit {\n\n\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n}\n","export const environment = {\n  production: true,\n  serverURL: 'http://127.0.0.1:8080/app-ta4j-server-1.1-SNAPSHOT/greeting',\n  ws_serverURL: 'ws://127.0.0.1:8080/app-ta4j-server-1.1-SNAPSHOT/greeting'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverURL: \"http://localhost:8080/gkz-stomp-endpoint\",\n  subscribeURL: \"/topic/hi\",\n  subscribe_snd_URL: \"/gkz/hello\"\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}